// THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS.

// WARNING: This file has automatically been generated
// Code generated by ruby_h_to_go. DO NOT EDIT.

package ruby

/*
#include "ruby.h"
*/
import "C"

import (
	"unsafe"
)

// RbMemoryViewAvailablePFuncT is a type for passing `C.rb_memory_view_available_p_func_t` in and out of package
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/memory_view.h
type RbMemoryViewAvailablePFuncT C.rb_memory_view_available_p_func_t

// RbMemoryViewEntryT is a type for passing `C.rb_memory_view_entry_t` in and out of package
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/memory_view.h
type RbMemoryViewEntryT C.rb_memory_view_entry_t

// RbMemoryViewGetFuncT is a type for passing `C.rb_memory_view_get_func_t` in and out of package
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/memory_view.h
type RbMemoryViewGetFuncT C.rb_memory_view_get_func_t

// RbMemoryViewItemComponentT is a type for passing `C.rb_memory_view_item_component_t` in and out of package
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/memory_view.h
type RbMemoryViewItemComponentT C.rb_memory_view_item_component_t

// RbMemoryViewReleaseFuncT is a type for passing `C.rb_memory_view_release_func_t` in and out of package
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/memory_view.h
type RbMemoryViewReleaseFuncT C.rb_memory_view_release_func_t

// RbMemoryViewT is a type for passing `C.rb_memory_view_t` in and out of package
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/memory_view.h
type RbMemoryViewT C.rb_memory_view_t

// RbMemoryViewEntry is a type for passing `C.rb_memory_view_entry` in and out of package
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/memory_view.h
type RbMemoryViewEntry C.rb_memory_view_entry

// RbMemoryViewAvailableP calls `rb_memory_view_available_p` in C
//
// Original definition is following
//
//	bool rb_memory_view_available_p(VALUE obj)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/memory_view.h
func RbMemoryViewAvailableP(obj VALUE) Bool {
	ret := Bool(C.rb_memory_view_available_p(C.VALUE(obj)))
	return ret
}

// RbMemoryViewExtractItemMembers calls `rb_memory_view_extract_item_members` in C
//
// Original definition is following
//
//	VALUE rb_memory_view_extract_item_members(const void *ptr, const rb_memory_view_item_component_t *members, const size_t n_members)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/memory_view.h
func RbMemoryViewExtractItemMembers(ptr unsafe.Pointer, members *RbMemoryViewItemComponentT, n_members SizeT) VALUE {
	var cMembers C.rb_memory_view_item_component_t
	ret := VALUE(C.rb_memory_view_extract_item_members(toCPointer(ptr), &cMembers, C.size_t(n_members)))
	*members = RbMemoryViewItemComponentT(cMembers)
	return ret
}

// RbMemoryViewGet calls `rb_memory_view_get` in C
//
// Original definition is following
//
//	bool rb_memory_view_get(VALUE obj, rb_memory_view_t* memory_view, int flags)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/memory_view.h
func RbMemoryViewGet(obj VALUE, memory_view *RbMemoryViewT, flags int) Bool {
	var cMemoryView C.rb_memory_view_t
	ret := Bool(C.rb_memory_view_get(C.VALUE(obj), &cMemoryView, C.int(flags)))
	*memory_view = RbMemoryViewT(cMemoryView)
	return ret
}

// RbMemoryViewGetItem calls `rb_memory_view_get_item` in C
//
// Original definition is following
//
//	VALUE rb_memory_view_get_item(rb_memory_view_t *view, const ssize_t *indices)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/memory_view.h
func RbMemoryViewGetItem(view *RbMemoryViewT, indices *SsizeT) VALUE {
	var cView C.rb_memory_view_t
	var cIndices C.ssize_t
	ret := VALUE(C.rb_memory_view_get_item(&cView, &cIndices))
	*view = RbMemoryViewT(cView)
	*indices = SsizeT(cIndices)
	return ret
}

// RbMemoryViewGetItemPointer calls `rb_memory_view_get_item_pointer` in C
//
// Original definition is following
//
//	void *rb_memory_view_get_item_pointer(rb_memory_view_t *view, const ssize_t *indices)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/memory_view.h
func RbMemoryViewGetItemPointer(view *RbMemoryViewT, indices *SsizeT) unsafe.Pointer {
	var cView C.rb_memory_view_t
	var cIndices C.ssize_t
	ret := unsafe.Pointer(C.rb_memory_view_get_item_pointer(&cView, &cIndices))
	*view = RbMemoryViewT(cView)
	*indices = SsizeT(cIndices)
	return ret
}

// RbMemoryViewItemSizeFromFormat calls `rb_memory_view_item_size_from_format` in C
//
// Original definition is following
//
//	ssize_t rb_memory_view_item_size_from_format(const char *format, const char **err)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/memory_view.h
func RbMemoryViewItemSizeFromFormat(format string, err string) SsizeT {
	charFormat, cleanCharformat := string2Char(format)
	defer cleanCharformat()

	charErr, cleanCharerr := string2Char(err)
	defer cleanCharerr()

	ret := SsizeT(C.rb_memory_view_item_size_from_format(charFormat, charErr))
	return ret
}

// RbMemoryViewParseItemFormat calls `rb_memory_view_parse_item_format` in C
//
// Original definition is following
//
//	ssize_t rb_memory_view_parse_item_format(const char *format,
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/memory_view.h
func RbMemoryViewParseItemFormat(format string, members *RbMemoryViewItemComponentT, n_members *SizeT, err string) SsizeT {
	charFormat, cleanCharformat := string2Char(format)
	defer cleanCharformat()

	charErr, cleanCharerr := string2Char(err)
	defer cleanCharerr()

	var cMembers C.rb_memory_view_item_component_t
	var cNMembers C.size_t
	ret := SsizeT(C.rb_memory_view_parse_item_format(charFormat, &cMembers, &cNMembers, charErr))
	*members = RbMemoryViewItemComponentT(cMembers)
	*n_members = SizeT(cNMembers)
	return ret
}

// RbMemoryViewPrepareItemDesc calls `rb_memory_view_prepare_item_desc` in C
//
// Original definition is following
//
//	void rb_memory_view_prepare_item_desc(rb_memory_view_t *view)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/memory_view.h
func RbMemoryViewPrepareItemDesc(view *RbMemoryViewT) {
	var cView C.rb_memory_view_t
	C.rb_memory_view_prepare_item_desc(&cView)
	*view = RbMemoryViewT(cView)
}

// RbMemoryViewRelease calls `rb_memory_view_release` in C
//
// Original definition is following
//
//	bool rb_memory_view_release(rb_memory_view_t* memory_view)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/memory_view.h
func RbMemoryViewRelease(memory_view *RbMemoryViewT) Bool {
	var cMemoryView C.rb_memory_view_t
	ret := Bool(C.rb_memory_view_release(&cMemoryView))
	*memory_view = RbMemoryViewT(cMemoryView)
	return ret
}
