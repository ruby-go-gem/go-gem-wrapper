// THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS.

// WARNING: This file has automatically been generated
// Code generated by ruby_h_to_go. DO NOT EDIT.

package ruby

/*
#include "ruby.h"
*/
import "C"

import (
	"unsafe"
)

// RbExtRactorSafe calls `rb_ext_ractor_safe` in C
//
// Original definition is following
//
//	void rb_ext_ractor_safe(bool flag)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/intern/load.h
func RbExtRactorSafe(flag Bool) {
	C.rb_ext_ractor_safe(C.bool(flag))
}

// RbExtResolveSymbol calls `rb_ext_resolve_symbol` in C
//
// Original definition is following
//
//	void *rb_ext_resolve_symbol(const char *feature, const char *symbol)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/intern/load.h
func RbExtResolveSymbol(feature string, symbol string) unsafe.Pointer {
	charFeature, cleanCharfeature := string2Char(feature)
	defer cleanCharfeature()

	charSymbol, cleanCharsymbol := string2Char(symbol)
	defer cleanCharsymbol()

	ret := unsafe.Pointer(C.rb_ext_resolve_symbol(charFeature, charSymbol))
	return ret
}

// RbFRequire calls `rb_f_require` in C
//
// Original definition is following
//
//	VALUE rb_f_require(VALUE self, VALUE feature)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/intern/load.h
func RbFRequire(self VALUE, feature VALUE) VALUE {
	ret := VALUE(C.rb_f_require(C.VALUE(self), C.VALUE(feature)))
	return ret
}

// RbFeatureProvided calls `rb_feature_provided` in C
//
// Original definition is following
//
//	int rb_feature_provided(const char *feature, const char **loading)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/intern/load.h
func RbFeatureProvided(feature string, loading string) int {
	charFeature, cleanCharfeature := string2Char(feature)
	defer cleanCharfeature()

	charLoading, cleanCharloading := string2Char(loading)
	defer cleanCharloading()

	ret := int(C.rb_feature_provided(charFeature, charLoading))
	return ret
}

// RbLoadProtect calls `rb_load_protect` in C
//
// Original definition is following
//
//	void rb_load_protect(VALUE path, int wrap, int *state)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/intern/load.h
func RbLoadProtect(path VALUE, wrap int, state *int) {
	var cState C.int
	C.rb_load_protect(C.VALUE(path), C.int(wrap), &cState)
	*state = int(cState)
}

// RbProvide calls `rb_provide` in C
//
// Original definition is following
//
//	void rb_provide(const char *feature)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/intern/load.h
func RbProvide(feature string) {
	char, clean := string2Char(feature)
	defer clean()

	C.rb_provide(char)
}

// RbProvided calls `rb_provided` in C
//
// Original definition is following
//
//	int rb_provided(const char *feature)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/intern/load.h
func RbProvided(feature string) int {
	char, clean := string2Char(feature)
	defer clean()

	ret := int(C.rb_provided(char))
	return ret
}

// RbRequireString calls `rb_require_string` in C
//
// Original definition is following
//
//	VALUE rb_require_string(VALUE feature)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/intern/load.h
func RbRequireString(feature VALUE) VALUE {
	ret := VALUE(C.rb_require_string(C.VALUE(feature)))
	return ret
}
