// THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS.

// WARNING: This file has automatically been generated
// Code generated by ruby_h_to_go. DO NOT EDIT.

package ruby

/*
#include "ruby.h"
*/
import "C"

// RbStrFormat calls `rb_str_format` in C
//
// Original definition is following
//
//	VALUE rb_str_format(int argc, const VALUE *argv, VALUE fmt)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/intern/sprintf.h
func RbStrFormat(argc int, argv *VALUE, fmt VALUE) VALUE {
	var cArgv C.VALUE
	ret := VALUE(C.rb_str_format(C.int(argc), &cArgv, C.VALUE(fmt)))
	*argv = VALUE(cArgv)
	return ret
}

// RbStrVcatf calls `rb_str_vcatf` in C
//
// Original definition is following
//
//	VALUE rb_str_vcatf(VALUE dst, const char *fmt, va_list ap)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/intern/sprintf.h
func RbStrVcatf(dst VALUE, fmt string, ap VaList) VALUE {
	char, clean := string2Char(fmt)
	defer clean()

	ret := VALUE(C.rb_str_vcatf(C.VALUE(dst), char, C.va_list(ap)))
	return ret
}

// RbVsprintf calls `rb_vsprintf` in C
//
// Original definition is following
//
//	VALUE rb_vsprintf(const char *fmt, va_list ap)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/intern/sprintf.h
func RbVsprintf(fmt string, ap VaList) VALUE {
	char, clean := string2Char(fmt)
	defer clean()

	ret := VALUE(C.rb_vsprintf(char, C.va_list(ap)))
	return ret
}
