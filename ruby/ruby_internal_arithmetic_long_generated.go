// THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS.

// WARNING: This file has automatically been generated
// Code generated by ruby_h_to_go. DO NOT EDIT.

package ruby

/*
#include "ruby.h"
*/
import "C"

// RbNum2Long calls `rb_num2long` in C
//
// Original definition is following
//
//	long rb_num2long(VALUE num)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/arithmetic/long.h
func RbNum2Long(num VALUE) Long {
	ret := Long(C.rb_num2long(C.VALUE(num)))
	return ret
}

// RbNum2Ulong calls `rb_num2ulong` in C
//
// Original definition is following
//
//	unsigned long rb_num2ulong(VALUE num)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/arithmetic/long.h
func RbNum2Ulong(num VALUE) uint {
	ret := uint(C.rb_num2ulong(C.VALUE(num)))
	return ret
}

// RbLong2IntInline calls `rb_long2int_inline` in C
//
// Original definition is following
//
//	rb_long2int_inline(long n)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/arithmetic/long.h
func RbLong2IntInline(n Long) int {
	ret := int(C.rb_long2int_inline(C.long(n)))
	return ret
}

// RbLong2NumInline calls `rb_long2num_inline` in C
//
// Original definition is following
//
//	rb_long2num_inline(long v)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/arithmetic/long.h
func RbLong2NumInline(v Long) VALUE {
	ret := VALUE(C.rb_long2num_inline(C.long(v)))
	return ret
}

// RbNum2LongInline calls `rb_num2long_inline` in C
//
// Original definition is following
//
//	rb_num2long_inline(VALUE x)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/arithmetic/long.h
func RbNum2LongInline(x VALUE) Long {
	ret := Long(C.rb_num2long_inline(C.VALUE(x)))
	return ret
}

// RbNum2UlongInline calls `rb_num2ulong_inline` in C
//
// Original definition is following
//
//	rb_num2ulong_inline(VALUE x)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/arithmetic/long.h
func RbNum2UlongInline(x VALUE) uint {
	ret := uint(C.rb_num2ulong_inline(C.VALUE(x)))
	return ret
}

// RbUlong2NumInline calls `rb_ulong2num_inline` in C
//
// Original definition is following
//
//	rb_ulong2num_inline(unsigned long v)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/arithmetic/long.h
func RbUlong2NumInline(v uint) VALUE {
	ret := VALUE(C.rb_ulong2num_inline(C.ulong(v)))
	return ret
}
