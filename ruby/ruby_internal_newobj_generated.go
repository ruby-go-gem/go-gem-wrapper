// THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS.

// WARNING: This file has automatically been generated
// Code generated by ruby_h_to_go. DO NOT EDIT.

package ruby

/*
#include "ruby.h"
*/
import "C"

// RbCopyGenericIvar calls `rb_copy_generic_ivar` in C
//
// Original definition is following
//
//	void rb_copy_generic_ivar(VALUE clone, VALUE obj)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/newobj.h
func RbCopyGenericIvar(clone VALUE, obj VALUE) {
	C.rb_copy_generic_ivar(C.VALUE(clone), C.VALUE(obj))
}

// RbNewobjOf calls `rb_newobj_of` in C
//
// Original definition is following
//
//	VALUE rb_newobj_of(VALUE klass, VALUE flags)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/newobj.h
func RbNewobjOf(klass VALUE, flags VALUE) VALUE {
	ret := VALUE(C.rb_newobj_of(C.VALUE(klass), C.VALUE(flags)))
	return ret
}

// RbObjClass calls `rb_obj_class` in C
//
// Original definition is following
//
//	VALUE rb_obj_class(VALUE obj)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/newobj.h
func RbObjClass(obj VALUE) VALUE {
	ret := VALUE(C.rb_obj_class(C.VALUE(obj)))
	return ret
}

// RbObjSetup calls `rb_obj_setup` in C
//
// Original definition is following
//
//	VALUE rb_obj_setup(VALUE obj, VALUE klass, VALUE type)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/newobj.h
func RbObjSetup(obj VALUE, klass VALUE, r VALUE) VALUE {
	ret := VALUE(C.rb_obj_setup(C.VALUE(obj), C.VALUE(klass), C.VALUE(r)))
	return ret
}

// RbSingletonClassAttached calls `rb_singleton_class_attached` in C
//
// Original definition is following
//
//	void rb_singleton_class_attached(VALUE klass, VALUE obj)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/newobj.h
func RbSingletonClassAttached(klass VALUE, obj VALUE) {
	C.rb_singleton_class_attached(C.VALUE(klass), C.VALUE(obj))
}

// RbSingletonClassClone calls `rb_singleton_class_clone` in C
//
// Original definition is following
//
//	VALUE rb_singleton_class_clone(VALUE obj)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/newobj.h
func RbSingletonClassClone(obj VALUE) VALUE {
	ret := VALUE(C.rb_singleton_class_clone(C.VALUE(obj)))
	return ret
}
