// THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS.

// WARNING: This file has automatically been generated
// Code generated by ruby_h_to_go. DO NOT EDIT.

package ruby

/*
#include "ruby.h"
*/
import "C"

import (
	"unsafe"
)

// RbFrameCallee calls `rb_frame_callee` in C
//
// Original definition is following
//
//	ID rb_frame_callee(void)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/intern/eval.h
func RbFrameCallee() ID {
	ret := ID(C.rb_frame_callee())
	return ret
}

// RbFrameThisFunc calls `rb_frame_this_func` in C
//
// Original definition is following
//
//	ID rb_frame_this_func(void)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/intern/eval.h
func RbFrameThisFunc() ID {
	ret := ID(C.rb_frame_this_func())
	return ret
}

// RbMakeException calls `rb_make_exception` in C
//
// Original definition is following
//
//	VALUE rb_make_exception(int argc, const VALUE *argv)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/intern/eval.h
func RbMakeException(argc int, argv *VALUE) VALUE {
	var cArgv C.VALUE
	ret := VALUE(C.rb_make_exception(C.int(argc), &cArgv))
	*argv = VALUE(cArgv)
	return ret
}

// RbObjCallInit calls `rb_obj_call_init` in C
//
// Original definition is following
//
//	void rb_obj_call_init(VALUE obj, int argc, const VALUE *argv)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/intern/eval.h
func RbObjCallInit(obj VALUE, argc int, argv *VALUE) {
	var cArgv C.VALUE
	C.rb_obj_call_init(C.VALUE(obj), C.int(argc), &cArgv)
	*argv = VALUE(cArgv)
}

// RbObjCallInitKw calls `rb_obj_call_init_kw` in C
//
// Original definition is following
//
//	void rb_obj_call_init_kw(VALUE, int, const VALUE*, int)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/intern/eval.h
func RbObjCallInitKw(arg1 VALUE, arg2 int, arg3 *VALUE, arg4 int) {
	var cArg3 C.VALUE
	C.rb_obj_call_init_kw(C.VALUE(arg1), C.int(arg2), &cArg3, C.int(arg4))
	*arg3 = VALUE(cArg3)
}

// RbSetEndProc calls `rb_set_end_proc` in C
//
// Original definition is following
//
//	void rb_set_end_proc(void (*func)(VALUE arg), VALUE arg)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/intern/eval.h
func RbSetEndProc(arg1 unsafe.Pointer, arg VALUE) {
	C.rb_set_end_proc(toCPointer(arg1), C.VALUE(arg))
}
