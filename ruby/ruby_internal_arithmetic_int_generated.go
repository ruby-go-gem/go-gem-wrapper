// THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS.

// WARNING: This file has automatically been generated
// Code generated by ruby_h_to_go. DO NOT EDIT.

package ruby

/*
#include "ruby.h"
*/
import "C"

// RbFix2Int calls `rb_fix2int` in C
//
// Original definition is following
//
//	long rb_fix2int(VALUE num)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/arithmetic/int.h
func RbFix2Int(num VALUE) Long {
	ret := Long(C.rb_fix2int(C.VALUE(num)))
	return ret
}

// RbFix2Uint calls `rb_fix2uint` in C
//
// Original definition is following
//
//	unsigned long rb_fix2uint(VALUE num)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/arithmetic/int.h
func RbFix2Uint(num VALUE) uint {
	ret := uint(C.rb_fix2uint(C.VALUE(num)))
	return ret
}

// RbNum2Uint calls `rb_num2uint` in C
//
// Original definition is following
//
//	unsigned long rb_num2uint(VALUE num)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/arithmetic/int.h
func RbNum2Uint(num VALUE) uint {
	ret := uint(C.rb_num2uint(C.VALUE(num)))
	return ret
}

// RbInt2NumInline calls `rb_int2num_inline` in C
//
// Original definition is following
//
//	rb_int2num_inline(int v)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/arithmetic/int.h
func RbInt2NumInline(v int) VALUE {
	ret := VALUE(C.rb_int2num_inline(C.int(v)))
	return ret
}

// RbNum2IntInline calls `rb_num2int_inline` in C
//
// Original definition is following
//
//	rb_num2int_inline(VALUE x)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/arithmetic/int.h
func RbNum2IntInline(x VALUE) int {
	ret := int(C.rb_num2int_inline(C.VALUE(x)))
	return ret
}

// RbUint2NumInline calls `rb_uint2num_inline` in C
//
// Original definition is following
//
//	rb_uint2num_inline(unsigned int v)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/arithmetic/int.h
func RbUint2NumInline(v uint) VALUE {
	ret := VALUE(C.rb_uint2num_inline(C.uint(v)))
	return ret
}
