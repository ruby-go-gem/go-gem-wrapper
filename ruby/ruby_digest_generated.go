// THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS.

// WARNING: This file has automatically been generated
// Code generated by ruby_h_to_go. DO NOT EDIT.

package ruby

/*
#include "ruby.h"
*/
import "C"

// RbDigestHashFinishFuncT is a type for passing `C.rb_digest_hash_finish_func_t` in and out of package
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/digest.h
type RbDigestHashFinishFuncT C.rb_digest_hash_finish_func_t

// RbDigestHashInitFuncT is a type for passing `C.rb_digest_hash_init_func_t` in and out of package
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/digest.h
type RbDigestHashInitFuncT C.rb_digest_hash_init_func_t

// RbDigestHashUpdateFuncT is a type for passing `C.rb_digest_hash_update_func_t` in and out of package
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/digest.h
type RbDigestHashUpdateFuncT C.rb_digest_hash_update_func_t

// RbDigestMetadataT is a type for passing `C.rb_digest_metadata_t` in and out of package
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/digest.h
type RbDigestMetadataT C.rb_digest_metadata_t

// RbDigestMakeMetadata calls `rb_digest_make_metadata` in C
//
// Original definition is following
//
//	rb_digest_make_metadata(const rb_digest_metadata_t *meta)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/digest.h
func RbDigestMakeMetadata(meta *RbDigestMetadataT) VALUE {
	var cMeta C.rb_digest_metadata_t
	ret := VALUE(C.rb_digest_make_metadata(&cMeta))
	*meta = RbDigestMetadataT(cMeta)
	return ret
}

// RbDigestNamespace calls `rb_digest_namespace` in C
//
// Original definition is following
//
//	rb_digest_namespace(void)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/digest.h
func RbDigestNamespace() VALUE {
	ret := VALUE(C.rb_digest_namespace())
	return ret
}

// RbIdMetadata calls `rb_id_metadata` in C
//
// Original definition is following
//
//	rb_id_metadata(void)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/digest.h
func RbIdMetadata() ID {
	ret := ID(C.rb_id_metadata())
	return ret
}
