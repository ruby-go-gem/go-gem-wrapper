// THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS.

// WARNING: This file has automatically been generated
// Code generated by ruby_h_to_go. DO NOT EDIT.

package ruby

/*
#include "ruby.h"
*/
import "C"

// RbGenrandReal calls `rb_genrand_real` in C
//
// Original definition is following
//
//	double rb_genrand_real(void)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/intern/random.h
func RbGenrandReal() Double {
	ret := Double(C.rb_genrand_real())
	return ret
}

// RbGenrandUlongLimited calls `rb_genrand_ulong_limited` in C
//
// Original definition is following
//
//	unsigned long rb_genrand_ulong_limited(unsigned long i)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/intern/random.h
func RbGenrandUlongLimited(i uint) uint {
	ret := uint(C.rb_genrand_ulong_limited(C.ulong(i)))
	return ret
}

// RbRandomBytes calls `rb_random_bytes` in C
//
// Original definition is following
//
//	VALUE rb_random_bytes(VALUE rnd, long n)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/intern/random.h
func RbRandomBytes(rnd VALUE, n Long) VALUE {
	ret := VALUE(C.rb_random_bytes(C.VALUE(rnd), C.long(n)))
	return ret
}

// RbRandomInt32 calls `rb_random_int32` in C
//
// Original definition is following
//
//	unsigned int rb_random_int32(VALUE rnd)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/intern/random.h
func RbRandomInt32(rnd VALUE) uint {
	ret := uint(C.rb_random_int32(C.VALUE(rnd)))
	return ret
}

// RbRandomReal calls `rb_random_real` in C
//
// Original definition is following
//
//	double rb_random_real(VALUE rnd)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/intern/random.h
func RbRandomReal(rnd VALUE) Double {
	ret := Double(C.rb_random_real(C.VALUE(rnd)))
	return ret
}

// RbRandomUlongLimited calls `rb_random_ulong_limited` in C
//
// Original definition is following
//
//	unsigned long rb_random_ulong_limited(VALUE rnd, unsigned long limit)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/intern/random.h
func RbRandomUlongLimited(rnd VALUE, limit uint) uint {
	ret := uint(C.rb_random_ulong_limited(C.VALUE(rnd), C.ulong(limit)))
	return ret
}

// RbResetRandomSeed calls `rb_reset_random_seed` in C
//
// Original definition is following
//
//	void rb_reset_random_seed(void)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/intern/random.h
func RbResetRandomSeed() {
	C.rb_reset_random_seed()
}
