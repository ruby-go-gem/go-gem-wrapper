// THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS.

// WARNING: This file has automatically been generated
// Code generated by ruby_h_to_go. DO NOT EDIT.

package ruby

/*
#include "ruby.h"
*/
import "C"

// RbCheckId calls `rb_check_id` in C
//
// Original definition is following
//
//	ID rb_check_id(volatile VALUE *namep)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/symbol.h
func RbCheckId(namep *VALUE) ID {
	var cNamep C.VALUE
	ret := ID(C.rb_check_id(&cNamep))
	*namep = VALUE(cNamep)
	return ret
}

// RbCheckSymbol calls `rb_check_symbol` in C
//
// Original definition is following
//
//	VALUE rb_check_symbol(volatile VALUE *namep)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/symbol.h
func RbCheckSymbol(namep *VALUE) VALUE {
	var cNamep C.VALUE
	ret := VALUE(C.rb_check_symbol(&cNamep))
	*namep = VALUE(cNamep)
	return ret
}

// RbId2Name calls `rb_id2name` in C
//
// Original definition is following
//
//	const char *rb_id2name(ID id)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/symbol.h
func RbId2Name(id ID) string {
	ret := string(C.rb_id2name(C.ID(id)))
	return ret
}

// RbId2Str calls `rb_id2str` in C
//
// Original definition is following
//
//	VALUE rb_id2str(ID id)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/symbol.h
func RbId2Str(id ID) VALUE {
	ret := VALUE(C.rb_id2str(C.ID(id)))
	return ret
}

// RbId2Sym calls `rb_id2sym` in C
//
// Original definition is following
//
//	VALUE rb_id2sym(ID id)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/symbol.h
func RbId2Sym(id ID) VALUE {
	ret := VALUE(C.rb_id2sym(C.ID(id)))
	return ret
}

// RbIntern calls `rb_intern` in C
//
// Original definition is following
//
//	ID rb_intern(const char *name)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/symbol.h
func RbIntern(name string) ID {
	char, clean := string2Char(name)
	defer clean()

	ret := ID(C.rb_intern(char))
	return ret
}

// RbIntern2 calls `rb_intern2` in C
//
// Original definition is following
//
//	ID rb_intern2(const char *name, long len)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/symbol.h
func RbIntern2(name string, len Long) ID {
	char, clean := string2Char(name)
	defer clean()

	ret := ID(C.rb_intern2(char, C.long(len)))
	return ret
}

// RbInternStr calls `rb_intern_str` in C
//
// Original definition is following
//
//	ID rb_intern_str(VALUE str)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/symbol.h
func RbInternStr(str VALUE) ID {
	ret := ID(C.rb_intern_str(C.VALUE(str)))
	return ret
}

// RbSym2Str calls `rb_sym2str` in C
//
// Original definition is following
//
//	VALUE rb_sym2str(VALUE id)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/symbol.h
func RbSym2Str(id VALUE) VALUE {
	ret := VALUE(C.rb_sym2str(C.VALUE(id)))
	return ret
}

// RbToId calls `rb_to_id` in C
//
// Original definition is following
//
//	ID rb_to_id(VALUE str)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/symbol.h
func RbToId(str VALUE) ID {
	ret := ID(C.rb_to_id(C.VALUE(str)))
	return ret
}

// RbToSymbol calls `rb_to_symbol` in C
//
// Original definition is following
//
//	VALUE rb_to_symbol(VALUE name)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/symbol.h
func RbToSymbol(name VALUE) VALUE {
	ret := VALUE(C.rb_to_symbol(C.VALUE(name)))
	return ret
}
