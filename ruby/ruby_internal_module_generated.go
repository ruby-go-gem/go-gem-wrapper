// THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS.

// WARNING: This file has automatically been generated
// Code generated by ruby_h_to_go. DO NOT EDIT.

package ruby

/*
#include "ruby.h"
*/
import "C"

// RbDefineClass calls `rb_define_class` in C
//
// Original definition is following
//
//	VALUE rb_define_class(const char *name, VALUE super)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/module.h
func RbDefineClass(name string, super VALUE) VALUE {
	char, clean := string2Char(name)
	defer clean()

	ret := VALUE(C.rb_define_class(char, C.VALUE(super)))
	return ret
}

// RbDefineClassUnder calls `rb_define_class_under` in C
//
// Original definition is following
//
//	VALUE rb_define_class_under(VALUE outer, const char *name, VALUE super)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/module.h
func RbDefineClassUnder(outer VALUE, name string, super VALUE) VALUE {
	char, clean := string2Char(name)
	defer clean()

	ret := VALUE(C.rb_define_class_under(C.VALUE(outer), char, C.VALUE(super)))
	return ret
}

// RbDefineModule calls `rb_define_module` in C
//
// Original definition is following
//
//	VALUE rb_define_module(const char *name)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/module.h
func RbDefineModule(name string) VALUE {
	char, clean := string2Char(name)
	defer clean()

	ret := VALUE(C.rb_define_module(char))
	return ret
}

// RbDefineModuleUnder calls `rb_define_module_under` in C
//
// Original definition is following
//
//	VALUE rb_define_module_under(VALUE outer, const char *name)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/module.h
func RbDefineModuleUnder(outer VALUE, name string) VALUE {
	char, clean := string2Char(name)
	defer clean()

	ret := VALUE(C.rb_define_module_under(C.VALUE(outer), char))
	return ret
}

// RbExtendObject calls `rb_extend_object` in C
//
// Original definition is following
//
//	void rb_extend_object(VALUE obj, VALUE mod)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/module.h
func RbExtendObject(obj VALUE, mod VALUE) {
	C.rb_extend_object(C.VALUE(obj), C.VALUE(mod))
}

// RbIncludeModule calls `rb_include_module` in C
//
// Original definition is following
//
//	void rb_include_module(VALUE klass, VALUE module)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/module.h
func RbIncludeModule(klass VALUE, module VALUE) {
	C.rb_include_module(C.VALUE(klass), C.VALUE(module))
}

// RbPrependModule calls `rb_prepend_module` in C
//
// Original definition is following
//
//	void rb_prepend_module(VALUE klass, VALUE module)
//
// ref. https://github.com/ruby/ruby/blob/master/include/ruby/internal/module.h
func RbPrependModule(klass VALUE, module VALUE) {
	C.rb_prepend_module(C.VALUE(klass), C.VALUE(module))
}
