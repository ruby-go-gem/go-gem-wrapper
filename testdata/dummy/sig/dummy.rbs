module Dummy
  VERSION: String

  class Error < StandardError
  end

  def self.sum: (Integer a, Integer b) -> Integer

  def self.with_block: (untyped) { (untyped) -> untyped } -> untyped
  def self.with_block2: (untyped) { (untyped) -> untyped } -> untyped

  def self.hello: (String name) -> String

  def self.round_num2: (Integer num, Integer ndigits) -> Integer
  def self.round_num3: (Integer num, Integer ndigits) -> Integer

  def self.to_string: (untyped source) -> String

  def self.max: (Integer, Integer) -> Integer
  def max: (Integer, Integer) -> Integer

  class InnerClass
  end

  module InnerModule
  end

  class Tests
    @source: Integer

    attr_accessor source: Integer

    def initialize: (Integer source) -> void

    def kilobyte: () -> Integer
  end

  # See the writing guide of rbs: https://github.com/ruby/rbs#guides
end
