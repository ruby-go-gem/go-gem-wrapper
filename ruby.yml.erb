GENERATOR:
  PackageName: ruby
  PackageDescription: "Package ruby is a wrapper for creating Ruby native extension in Go"
  PackageLicense: "THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS."
  Includes:
    - "ruby.h"
  Options:
    SafeStrings: true

PARSER:
  IncludePaths: <%= include_paths.to_s %>

  SourcesPaths: <%= source_paths %>

  Defines:
    __APPLE__: null

TRANSLATOR:
  ConstRules:
    defines: expand
    enum: cgo

  PtrTips:
    function:
      - {target: "^rb_eval_string_wrap$",    tips: [0,ref]}
      - {target: "^rb_eval_string_protect$", tips: [0,ref]}

  Rules:
    global:
      - {action: replace, from: "^_$", to: "arg"}

    const:
      # enums
      - {action: accept, from: "^RB_IO_WAIT_"}
      - {action: accept, from: "^RB_WARN_CATEGORY_"}
      - {action: accept, from: "^rb_io_wait_readwrite$"}

      # e.g. RB_IO_WAIT_READABLE -> RbIoWaitReadable
      - {transform: lower}
      - {load: snakecase}

      - {transform: export}

    function:
      # FIXME: Because both `rb_hash` and `rb_Hash` are defined, causing the automatically generated function to duplicate and cause an error.
      - {action: ignore, from: "^rb_Hash$"}

      # FIXME: Following cannot be successfully auto-generated by c-for-go...
      - {action: ignore, from: "^rb_gc_update_tbl_refs$"}
      - {action: ignore, from: "^rb_fd_select$"}
      - {action: ignore, from: "^rb_thread_fd_select$"}
      - {action: ignore, from: "^rb_glob$"}
      - {action: ignore, from: "^rb_hash_tbl$"}
      - {action: ignore, from: "^rb_hash_foreach$"}
      - {action: ignore, from: "^rb_ivar_foreach$"}
      - {action: ignore, from: "^rb_mark_hash$"}
      - {action: ignore, from: "^rb_mark_set$"}
      - {action: ignore, from: "^rb_mark_tbl$"}
      - {action: ignore, from: "^rb_mark_tbl_no_pin$"}
      - {action: ignore, from: "^rb_readwrite_sys_fail$"}
      - {action: ignore, from: "^rb_readwrite_syserr_fail$"}
      - {action: ignore, from: "^rb_set_end_proc$"}
      - {action: ignore, from: "^rb_st_"}
      - {action: ignore, from: "^rb_thread_wait_for$"}
      - {action: ignore, from: "^rb_timespec_now$"}
      - {action: ignore, from: "^rb_time_interval$"}
      - {action: ignore, from: "^rb_time_timespec_interval$"}
      - {action: ignore, from: "^rb_time_timespec_new$"}
      - {action: ignore, from: "^rb_time_timespec$"}
      - {action: ignore, from: "^rb_time_timeval$"}
      - {action: ignore, from: "^rb_type$"}
      - {action: ignore, from: "^RB_BUILTIN_TYPE$"}
      - {action: ignore, from: "^RB_TYPE_P$"}

      #  Go's variable-length arguments couldn't be passed directly to C
      - {action: ignore, from: "^rb_ary_new_from_args$"}
      - {action: ignore, from: "^rb_bug$"}
      - {action: ignore, from: "^rb_category_compile_warn$"}
      - {action: ignore, from: "^rb_category_warn$"}
      - {action: ignore, from: "^rb_category_warning$"}
      - {action: ignore, from: "^rb_compile_warn$"}
      - {action: ignore, from: "^rb_compile_warning$"}
      - {action: ignore, from: "^rb_data_define$"}
      - {action: ignore, from: "^rb_fatal$"}
      - {action: ignore, from: "^rb_frozen_error_raise$"}
      - {action: ignore, from: "^rb_funcall$"}
      - {action: ignore, from: "^rb_loaderror$"}
      - {action: ignore, from: "^rb_loaderror_with_path$"}
      - {action: ignore, from: "^rb_name_error$"}
      - {action: ignore, from: "^rb_name_error_str$"}
      - {action: ignore, from: "^rb_raise$"}
      - {action: ignore, from: "^rb_rescue2$"}
      - {action: ignore, from: "^rb_scan_args$"}
      - {action: ignore, from: "^rb_scan_args_kw$"}
      - {action: ignore, from: "^rb_sprintf$"}
      - {action: ignore, from: "^rb_str_catf$"}
      - {action: ignore, from: "^rb_struct_define$"}
      - {action: ignore, from: "^rb_struct_define_under$"}
      - {action: ignore, from: "^rb_struct_define_without_accessor$"}
      - {action: ignore, from: "^rb_struct_define_without_accessor_under$"}
      - {action: ignore, from: "^rb_struct_new$"}
      - {action: ignore, from: "^rb_sys_warning$"}
      - {action: ignore, from: "^rb_warn$"}
      - {action: ignore, from: "^rb_warning$"}
      - {action: ignore, from: "^rb_yield_values$"}

      # FIXME: call of non-function
      - {action: ignore, from: "^rb_gvar_undef_getter$"}
      - {action: ignore, from: "^rb_gvar_undef_setter$"}
      - {action: ignore, from: "^rb_gvar_undef_marker$"}
      - {action: ignore, from: "^rb_gvar_val_getter$"}
      - {action: ignore, from: "^rb_gvar_val_setter$"}
      - {action: ignore, from: "^rb_gvar_val_marker$"}
      - {action: ignore, from: "^rb_gvar_var_getter$"}
      - {action: ignore, from: "^rb_gvar_var_setter$"}
      - {action: ignore, from: "^rb_gvar_var_marker$"}
      - {action: ignore, from: "^rb_str_setter$"}

      # deprecated functions
      - {action: ignore, from: "^RB_OBJ_INFECT$"}
      - {action: ignore, from: "^RB_OBJ_INFECT_RAW$"}
      - {action: ignore, from: "^RB_OBJ_TAINT$"}
      - {action: ignore, from: "^RB_OBJ_TAINT_RAW$"}
      - {action: ignore, from: "^RB_OBJ_TAINTABLE$"}
      - {action: ignore, from: "^RB_OBJ_TAINTED$"}
      - {action: ignore, from: "^RB_OBJ_TAINTED_RAW$"}
      - {action: ignore, from: "^rb_check_safe_str$"}
      - {action: ignore, from: "^rb_clear_constant_cache$"}
      - {action: ignore, from: "^rb_clone_setup$"}
      - {action: ignore, from: "^rb_complex_polar$"}
      - {action: ignore, from: "^rb_data_object_alloc$"}
      - {action: ignore, from: "^rb_data_object_get_warning$"}
      - {action: ignore, from: "^rb_data_object_wrap_warning$"}
      - {action: ignore, from: "^rb_data_typed_object_alloc$"}
      - {action: ignore, from: "^rb_dup_setup$"}
      - {action: ignore, from: "^rb_gc_force_recycle$"}
      - {action: ignore, from: "^rb_iterate$"}
      - {action: ignore, from: "^rb_scan_args_length_mismatch$"}
      - {action: ignore, from: "^rb_varargs_bad_length$"}

      # internal functions in ruby.h
      - {action: ignore, from: "^rb_scan_args_bad_format$"}

      # FIXME: Monkey patched from C `VALUE(*func)(ANYARGS)` argument to Go `unsafe.Pointer` argument
      - {action: ignore, from: "^rb_define_module_function$"}
      - {action: ignore, from: "^rb_define_singleton_method$"}

      - {action: accept, from: "(?i)^rb_"}
      - {action: accept, from: "^RSTRING_"}

      # e.g.
      # * rb_special_const_p -> rbSpecialConstP (to camel case)
      # * rb_Integer -> rbInteger (to camel case)
      # * RB_SPECIAL_CONST_P -> RB_SPECIAL_CONST_P (no changed)
      - {transform: lower, from: ".*[a-z].*"}
      - {action: replace, from: "_([^_A-Z]+)", to: "$1", transform: title}

      - {transform: export}

    type:
      - {action: accept, from: "^fd_"}
      - {action: accept, from: "^rb_"}
      # - {action: accept, from: "^st_"}
      - {action: accept, from: "(?i)^ruby"}
      - {action: accept, from: "^va_list$"}
      - {action: accept, from: "^ID$"}
      - {action: accept, from: "^VALUE$"}

      - {load: snakecase}
      - {transform: export}

    private:
      - {transform: unexport}

    post-global:
      - {action: doc, from: "^rb_fd_",   to: "https://github.com/ruby/ruby/blob/master/include/ruby/internal/intern/$path"}
      - {action: doc, from: "^rb_hash_", to: "https://github.com/ruby/ruby/blob/master/include/ruby/internal/$path"}
      - {action: doc, from: "^rb_proc_", to: "https://github.com/ruby/ruby/blob/master/include/ruby/internal/$path"}
      - {action: doc, from: "^st_",      to: "https://github.com/ruby/ruby/blob/master/include/$path"}
      - {action: doc, from: ".+",        to: "https://github.com/ruby/ruby/blob/master/include/ruby/$path"}
